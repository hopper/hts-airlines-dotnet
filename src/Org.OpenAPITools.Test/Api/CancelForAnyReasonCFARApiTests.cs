/*
 * Airline API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing CancelForAnyReasonCFARApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CancelForAnyReasonCFARApiTests : IDisposable
    {
        private CancelForAnyReasonCFARApi instance;

        public CancelForAnyReasonCFARApiTests()
        {
            instance = new CancelForAnyReasonCFARApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CancelForAnyReasonCFARApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CancelForAnyReasonCFARApi
            //Assert.IsType<CancelForAnyReasonCFARApi>(instance);
        }

        /// <summary>
        /// Test GetCfarContractsId
        /// </summary>
        [Fact]
        public void GetCfarContractsIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetCfarContractsId(id);
            //Assert.IsType<CfarContract>(response);
        }

        /// <summary>
        /// Test PostCfarContractExercises
        /// </summary>
        [Fact]
        public void PostCfarContractExercisesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateCfarContractExerciseRequest createCfarContractExerciseRequest = null;
            //string? hCSessionID = null;
            //var response = instance.PostCfarContractExercises(createCfarContractExerciseRequest, hCSessionID);
            //Assert.IsType<CfarContractExercise>(response);
        }

        /// <summary>
        /// Test PostCfarContracts
        /// </summary>
        [Fact]
        public void PostCfarContractsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateCfarContractRequest createCfarContractRequest = null;
            //var response = instance.PostCfarContracts(createCfarContractRequest);
            //Assert.IsType<CfarContract>(response);
        }

        /// <summary>
        /// Test PostCfarContractsIdPayment
        /// </summary>
        [Fact]
        public void PostCfarContractsIdPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //ProcessCfarPaymentRequest processCfarPaymentRequest = null;
            //string? hCSessionID = null;
            //var response = instance.PostCfarContractsIdPayment(id, processCfarPaymentRequest, hCSessionID);
            //Assert.IsType<CfarPayment>(response);
        }

        /// <summary>
        /// Test PostCfarOffers
        /// </summary>
        [Fact]
        public void PostCfarOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateCfarOfferRequest createCfarOfferRequest = null;
            //string? hCSessionID = null;
            //var response = instance.PostCfarOffers(createCfarOfferRequest, hCSessionID);
            //Assert.IsType<List<CfarOffer>>(response);
        }

        /// <summary>
        /// Test PutCfarContractExercisesIdMarkCompleted
        /// </summary>
        [Fact]
        public void PutCfarContractExercisesIdMarkCompletedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //MarkCfarContractExerciseCompleteRequest markCfarContractExerciseCompleteRequest = null;
            //string? hCSessionID = null;
            //var response = instance.PutCfarContractExercisesIdMarkCompleted(id, markCfarContractExerciseCompleteRequest, hCSessionID);
            //Assert.IsType<CfarContractExercise>(response);
        }

        /// <summary>
        /// Test PutCfarContractsIdFormsOfPayment
        /// </summary>
        [Fact]
        public void PutCfarContractsIdFormsOfPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //UpdateCfarFormOfPaymentRequest updateCfarFormOfPaymentRequest = null;
            //string? hCSessionID = null;
            //var response = instance.PutCfarContractsIdFormsOfPayment(id, updateCfarFormOfPaymentRequest, hCSessionID);
            //Assert.IsType<CfarContract>(response);
        }

        /// <summary>
        /// Test PutCfarContractsIdUpdateStatus
        /// </summary>
        [Fact]
        public void PutCfarContractsIdUpdateStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //UpdateCfarContractRequest updateCfarContractRequest = null;
            //string? hCSessionID = null;
            //var response = instance.PutCfarContractsIdUpdateStatus(id, updateCfarContractRequest, hCSessionID);
            //Assert.IsType<CfarContract>(response);
        }
    }
}
