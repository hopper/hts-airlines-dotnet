/*
 * Airline API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Com.Hopper.Hts.Airlines.Client;
using Com.Hopper.Hts.Airlines.Api;
// uncomment below to import models
//using Com.Hopper.Hts.Airlines.Model;

namespace Com.Hopper.Hts.Airlines.Test.Api
{
    /// <summary>
    ///  Class for testing AnalyticsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AnalyticsApiTests : IDisposable
    {
        private AnalyticsApi instance;

        public AnalyticsApiTests()
        {
            instance = new AnalyticsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AnalyticsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AnalyticsApi
            //Assert.IsType<AnalyticsApi>(instance);
        }

        /// <summary>
        /// Test PostCustomerEvents
        /// </summary>
        [Fact]
        public void PostCustomerEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CfarEvent cfarEvent = null;
            //instance.PostCustomerEvents(cfarEvent);
        }

        /// <summary>
        /// Test PostEvents
        /// </summary>
        [Fact]
        public void PostEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Event varEvent = null;
            //instance.PostEvents(varEvent);
        }
    }
}
