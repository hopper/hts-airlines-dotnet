/*
 * Airline API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Com.Hopper.Hts.Airlines.Client.OpenAPIDateConverter;

namespace Com.Hopper.Hts.Airlines.Model
{
    /// <summary>
    /// A process CFAR payment request
    /// </summary>
    [DataContract(Name = "process_cfar_payment_request")]
    public partial class ProcessCfarPaymentRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProcessCfarPaymentRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ProcessCfarPaymentRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ProcessCfarPaymentRequest" /> class.
        /// </summary>
        /// <param name="paymentMethodToken">The Token of the Form of Payment used to pay for the CFAR fee.  (required).</param>
        /// <param name="firstName">First name of the cardholder (required).</param>
        /// <param name="lastName">Last name of the cardholder (required).</param>
        /// <param name="addressLine1">Address of the cardholder (first line).</param>
        /// <param name="addressLine2">Address of the cardholder (second line).</param>
        /// <param name="city">City of the cardholder.</param>
        /// <param name="stateOrProvince">State or province of the cardholder.</param>
        /// <param name="postalCode">Postal code  of the cardholder.</param>
        /// <param name="country">Country of the cardholder.</param>
        /// <param name="pnrReference">Reference of the PNR in the airline system (required).</param>
        /// <param name="emailAddress">Email address of the user (required).</param>
        public ProcessCfarPaymentRequest(string paymentMethodToken = default(string), string firstName = default(string), string lastName = default(string), string addressLine1 = default(string), string addressLine2 = default(string), string city = default(string), string stateOrProvince = default(string), string postalCode = default(string), string country = default(string), string pnrReference = default(string), string emailAddress = default(string))
        {
            // to ensure "paymentMethodToken" is required (not null)
            if (paymentMethodToken == null)
            {
                throw new ArgumentNullException("paymentMethodToken is a required property for ProcessCfarPaymentRequest and cannot be null");
            }
            this.PaymentMethodToken = paymentMethodToken;
            // to ensure "firstName" is required (not null)
            if (firstName == null)
            {
                throw new ArgumentNullException("firstName is a required property for ProcessCfarPaymentRequest and cannot be null");
            }
            this.FirstName = firstName;
            // to ensure "lastName" is required (not null)
            if (lastName == null)
            {
                throw new ArgumentNullException("lastName is a required property for ProcessCfarPaymentRequest and cannot be null");
            }
            this.LastName = lastName;
            // to ensure "pnrReference" is required (not null)
            if (pnrReference == null)
            {
                throw new ArgumentNullException("pnrReference is a required property for ProcessCfarPaymentRequest and cannot be null");
            }
            this.PnrReference = pnrReference;
            // to ensure "emailAddress" is required (not null)
            if (emailAddress == null)
            {
                throw new ArgumentNullException("emailAddress is a required property for ProcessCfarPaymentRequest and cannot be null");
            }
            this.EmailAddress = emailAddress;
            this.AddressLine1 = addressLine1;
            this.AddressLine2 = addressLine2;
            this.City = city;
            this.StateOrProvince = stateOrProvince;
            this.PostalCode = postalCode;
            this.Country = country;
        }

        /// <summary>
        /// The Token of the Form of Payment used to pay for the CFAR fee. 
        /// </summary>
        /// <value>The Token of the Form of Payment used to pay for the CFAR fee. </value>
        /*
        <example>MxyYEhDK12CUAA18bJDkAq0ab3y</example>
        */
        [DataMember(Name = "payment_method_token", IsRequired = true, EmitDefaultValue = true)]
        public string PaymentMethodToken { get; set; }

        /// <summary>
        /// First name of the cardholder
        /// </summary>
        /// <value>First name of the cardholder</value>
        /*
        <example>John</example>
        */
        [DataMember(Name = "first_name", IsRequired = true, EmitDefaultValue = true)]
        public string FirstName { get; set; }

        /// <summary>
        /// Last name of the cardholder
        /// </summary>
        /// <value>Last name of the cardholder</value>
        /*
        <example>Smith</example>
        */
        [DataMember(Name = "last_name", IsRequired = true, EmitDefaultValue = true)]
        public string LastName { get; set; }

        /// <summary>
        /// Address of the cardholder (first line)
        /// </summary>
        /// <value>Address of the cardholder (first line)</value>
        /*
        <example>123 12th St</example>
        */
        [DataMember(Name = "address_line1", EmitDefaultValue = false)]
        public string AddressLine1 { get; set; }

        /// <summary>
        /// Address of the cardholder (second line)
        /// </summary>
        /// <value>Address of the cardholder (second line)</value>
        /*
        <example>Building B</example>
        */
        [DataMember(Name = "address_line2", EmitDefaultValue = false)]
        public string AddressLine2 { get; set; }

        /// <summary>
        /// City of the cardholder
        /// </summary>
        /// <value>City of the cardholder</value>
        /*
        <example>Quebec City</example>
        */
        [DataMember(Name = "city", EmitDefaultValue = false)]
        public string City { get; set; }

        /// <summary>
        /// State or province of the cardholder
        /// </summary>
        /// <value>State or province of the cardholder</value>
        /*
        <example>QC</example>
        */
        [DataMember(Name = "state_or_province", EmitDefaultValue = false)]
        public string StateOrProvince { get; set; }

        /// <summary>
        /// Postal code  of the cardholder
        /// </summary>
        /// <value>Postal code  of the cardholder</value>
        /*
        <example>G1R 4S9</example>
        */
        [DataMember(Name = "postal_code", EmitDefaultValue = false)]
        public string PostalCode { get; set; }

        /// <summary>
        /// Country of the cardholder
        /// </summary>
        /// <value>Country of the cardholder</value>
        /*
        <example>CA</example>
        */
        [DataMember(Name = "country", EmitDefaultValue = false)]
        public string Country { get; set; }

        /// <summary>
        /// Reference of the PNR in the airline system
        /// </summary>
        /// <value>Reference of the PNR in the airline system</value>
        /*
        <example>ABC123</example>
        */
        [DataMember(Name = "pnr_reference", IsRequired = true, EmitDefaultValue = true)]
        public string PnrReference { get; set; }

        /// <summary>
        /// Email address of the user
        /// </summary>
        /// <value>Email address of the user</value>
        /*
        <example>aaa@bbb.ccc</example>
        */
        [DataMember(Name = "email_address", IsRequired = true, EmitDefaultValue = true)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProcessCfarPaymentRequest {\n");
            sb.Append("  PaymentMethodToken: ").Append(PaymentMethodToken).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  AddressLine1: ").Append(AddressLine1).Append("\n");
            sb.Append("  AddressLine2: ").Append(AddressLine2).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  StateOrProvince: ").Append(StateOrProvince).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  PnrReference: ").Append(PnrReference).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
