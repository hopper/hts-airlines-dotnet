// <auto-generated>
/*
 * Airline API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using Com.Hopper.Hts.Airlines.Client;

namespace Com.Hopper.Hts.Airlines.Model
{
    /// <summary>
    /// DgEvent
    /// </summary>
    public partial class DgEvent
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DgEvent" /> class.
        /// </summary>
        /// <param name="bookingConfirmed2"></param>
        public DgEvent(BookingConfirmed2 bookingConfirmed2)
        {
            BookingConfirmed2 = bookingConfirmed2;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DgEvent" /> class.
        /// </summary>
        /// <param name="dgDenyPurchase"></param>
        public DgEvent(DgDenyPurchase dgDenyPurchase)
        {
            DgDenyPurchase = dgDenyPurchase;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DgEvent" /> class.
        /// </summary>
        /// <param name="dgExerciseCallbackLaunched"></param>
        public DgEvent(DgExerciseCallbackLaunched dgExerciseCallbackLaunched)
        {
            DgExerciseCallbackLaunched = dgExerciseCallbackLaunched;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DgEvent" /> class.
        /// </summary>
        /// <param name="dgExerciseCustomerDataComplete"></param>
        public DgEvent(DgExerciseCustomerDataComplete dgExerciseCustomerDataComplete)
        {
            DgExerciseCustomerDataComplete = dgExerciseCustomerDataComplete;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DgEvent" /> class.
        /// </summary>
        /// <param name="dgExercisePortalComplete"></param>
        public DgEvent(DgExercisePortalComplete dgExercisePortalComplete)
        {
            DgExercisePortalComplete = dgExercisePortalComplete;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DgEvent" /> class.
        /// </summary>
        /// <param name="dgExerciseVerificationComplete"></param>
        public DgEvent(DgExerciseVerificationComplete dgExerciseVerificationComplete)
        {
            DgExerciseVerificationComplete = dgExerciseVerificationComplete;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DgEvent" /> class.
        /// </summary>
        /// <param name="dgOfferSelected"></param>
        public DgEvent(DgOfferSelected dgOfferSelected)
        {
            DgOfferSelected = dgOfferSelected;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DgEvent" /> class.
        /// </summary>
        /// <param name="dgOffersBannerDisplay"></param>
        public DgEvent(DgOffersBannerDisplay dgOffersBannerDisplay)
        {
            DgOffersBannerDisplay = dgOffersBannerDisplay;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DgEvent" /> class.
        /// </summary>
        /// <param name="dgOffersBannerLoaded"></param>
        public DgEvent(DgOffersBannerLoaded dgOffersBannerLoaded)
        {
            DgOffersBannerLoaded = dgOffersBannerLoaded;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DgEvent" /> class.
        /// </summary>
        /// <param name="dgOffersMoreInfoClicked"></param>
        public DgEvent(DgOffersMoreInfoClicked dgOffersMoreInfoClicked)
        {
            DgOffersMoreInfoClicked = dgOffersMoreInfoClicked;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Gets or Sets BookingConfirmed2
        /// </summary>
        public BookingConfirmed2? BookingConfirmed2 { get; set; }

        /// <summary>
        /// Gets or Sets DgDenyPurchase
        /// </summary>
        public DgDenyPurchase? DgDenyPurchase { get; set; }

        /// <summary>
        /// Gets or Sets DgExerciseCallbackLaunched
        /// </summary>
        public DgExerciseCallbackLaunched? DgExerciseCallbackLaunched { get; set; }

        /// <summary>
        /// Gets or Sets DgExerciseCustomerDataComplete
        /// </summary>
        public DgExerciseCustomerDataComplete? DgExerciseCustomerDataComplete { get; set; }

        /// <summary>
        /// Gets or Sets DgExercisePortalComplete
        /// </summary>
        public DgExercisePortalComplete? DgExercisePortalComplete { get; set; }

        /// <summary>
        /// Gets or Sets DgExerciseVerificationComplete
        /// </summary>
        public DgExerciseVerificationComplete? DgExerciseVerificationComplete { get; set; }

        /// <summary>
        /// Gets or Sets DgOfferSelected
        /// </summary>
        public DgOfferSelected? DgOfferSelected { get; set; }

        /// <summary>
        /// Gets or Sets DgOffersBannerDisplay
        /// </summary>
        public DgOffersBannerDisplay? DgOffersBannerDisplay { get; set; }

        /// <summary>
        /// Gets or Sets DgOffersBannerLoaded
        /// </summary>
        public DgOffersBannerLoaded? DgOffersBannerLoaded { get; set; }

        /// <summary>
        /// Gets or Sets DgOffersMoreInfoClicked
        /// </summary>
        public DgOffersMoreInfoClicked? DgOffersMoreInfoClicked { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DgEvent {\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="DgEvent" />
    /// </summary>
    public class DgEventJsonConverter : JsonConverter<DgEvent>
    {
        /// <summary>
        /// Deserializes json to <see cref="DgEvent" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override DgEvent Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> type = default;

            BookingConfirmed2? bookingConfirmed2 = null;
            DgDenyPurchase? dgDenyPurchase = null;
            DgExerciseCallbackLaunched? dgExerciseCallbackLaunched = null;
            DgExerciseCustomerDataComplete? dgExerciseCustomerDataComplete = null;
            DgExercisePortalComplete? dgExercisePortalComplete = null;
            DgExerciseVerificationComplete? dgExerciseVerificationComplete = null;
            DgOfferSelected? dgOfferSelected = null;
            DgOffersBannerDisplay? dgOffersBannerDisplay = null;
            DgOffersBannerLoaded? dgOffersBannerLoaded = null;
            DgOffersMoreInfoClicked? dgOffersMoreInfoClicked = null;
            // TODO: not sure why duplicated params are generated, need to delete them manually

            Utf8JsonReader utf8JsonReaderDiscriminator = utf8JsonReader;
            while (utf8JsonReaderDiscriminator.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReaderDiscriminator.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReaderDiscriminator.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReaderDiscriminator.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReaderDiscriminator.CurrentDepth)
                    break;

                if (utf8JsonReaderDiscriminator.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReaderDiscriminator.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReaderDiscriminator.GetString();
                    utf8JsonReaderDiscriminator.Read();
                    if (localVarJsonPropertyName?.Equals("type") ?? false)
                    {
                        string? discriminator = utf8JsonReaderDiscriminator.GetString();
                        if (discriminator?.Equals("booking_confirmed") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderBookingConfirmed2 = utf8JsonReader;
                            bookingConfirmed2 = JsonSerializer.Deserialize<BookingConfirmed2>(ref utf8JsonReaderBookingConfirmed2, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("dg_deny_purchase") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderDgDenyPurchase = utf8JsonReader;
                            dgDenyPurchase = JsonSerializer.Deserialize<DgDenyPurchase>(ref utf8JsonReaderDgDenyPurchase, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("dg_exercise_callback_launched") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderDgExerciseCallbackLaunched = utf8JsonReader;
                            dgExerciseCallbackLaunched = JsonSerializer.Deserialize<DgExerciseCallbackLaunched>(ref utf8JsonReaderDgExerciseCallbackLaunched, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("dg_exercise_customer_data_complete") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderDgExerciseCustomerDataComplete = utf8JsonReader;
                            dgExerciseCustomerDataComplete = JsonSerializer.Deserialize<DgExerciseCustomerDataComplete>(ref utf8JsonReaderDgExerciseCustomerDataComplete, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("dg_exercise_portal_complete") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderDgExercisePortalComplete = utf8JsonReader;
                            dgExercisePortalComplete = JsonSerializer.Deserialize<DgExercisePortalComplete>(ref utf8JsonReaderDgExercisePortalComplete, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("dg_exercise_verification_complete") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderDgExerciseVerificationComplete = utf8JsonReader;
                            dgExerciseVerificationComplete = JsonSerializer.Deserialize<DgExerciseVerificationComplete>(ref utf8JsonReaderDgExerciseVerificationComplete, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("dg_offer_selected") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderDgOfferSelected = utf8JsonReader;
                            dgOfferSelected = JsonSerializer.Deserialize<DgOfferSelected>(ref utf8JsonReaderDgOfferSelected, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("dg_offers_banner_display") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderDgOffersBannerDisplay = utf8JsonReader;
                            dgOffersBannerDisplay = JsonSerializer.Deserialize<DgOffersBannerDisplay>(ref utf8JsonReaderDgOffersBannerDisplay, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("dg_offers_banner_loaded") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderDgOffersBannerLoaded = utf8JsonReader;
                            dgOffersBannerLoaded = JsonSerializer.Deserialize<DgOffersBannerLoaded>(ref utf8JsonReaderDgOffersBannerLoaded, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("dg_offers_more_info_clicked") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderDgOffersMoreInfoClicked = utf8JsonReader;
                            dgOffersMoreInfoClicked = JsonSerializer.Deserialize<DgOffersMoreInfoClicked>(ref utf8JsonReaderDgOffersMoreInfoClicked, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("booking_confirmed2") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderBookingConfirmed2 = utf8JsonReader;
                            bookingConfirmed2 = JsonSerializer.Deserialize<BookingConfirmed2>(ref utf8JsonReaderBookingConfirmed2, jsonSerializerOptions);
                        }
                    }
                }
            }

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "type":
                            type = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!type.IsSet)
                throw new ArgumentException("Property is required for class DgEvent.", nameof(type));

            if (type.IsSet && type.Value == null)
                throw new ArgumentNullException(nameof(type), "Property is not nullable for class DgEvent.");

            if (bookingConfirmed2 != null)
                return new DgEvent(bookingConfirmed2);

            if (dgDenyPurchase != null)
                return new DgEvent(dgDenyPurchase);

            if (dgExerciseCallbackLaunched != null)
                return new DgEvent(dgExerciseCallbackLaunched);

            if (dgExerciseCustomerDataComplete != null)
                return new DgEvent(dgExerciseCustomerDataComplete);

            if (dgExercisePortalComplete != null)
                return new DgEvent(dgExercisePortalComplete);

            if (dgExerciseVerificationComplete != null)
                return new DgEvent(dgExerciseVerificationComplete);

            if (dgOfferSelected != null)
                return new DgEvent(dgOfferSelected);

            if (dgOffersBannerDisplay != null)
                return new DgEvent(dgOffersBannerDisplay);

            if (dgOffersBannerLoaded != null)
                return new DgEvent(dgOffersBannerLoaded);

            if (dgOffersMoreInfoClicked != null)
                return new DgEvent(dgOffersMoreInfoClicked);

            if (bookingConfirmed2 != null)
                return new DgEvent(bookingConfirmed2);

            throw new JsonException();
        }

        /// <summary>
        /// Serializes a <see cref="DgEvent" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="dgEvent"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, DgEvent dgEvent, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            if (dgEvent.BookingConfirmed2 != null)
            {
                BookingConfirmed2JsonConverter bookingConfirmed2JsonConverter = (BookingConfirmed2JsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(dgEvent.BookingConfirmed2.GetType()));
                bookingConfirmed2JsonConverter.WriteProperties(writer, dgEvent.BookingConfirmed2, jsonSerializerOptions);
            }

            if (dgEvent.DgDenyPurchase != null)
            {
                DgDenyPurchaseJsonConverter dgDenyPurchaseJsonConverter = (DgDenyPurchaseJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(dgEvent.DgDenyPurchase.GetType()));
                dgDenyPurchaseJsonConverter.WriteProperties(writer, dgEvent.DgDenyPurchase, jsonSerializerOptions);
            }

            if (dgEvent.DgExerciseCallbackLaunched != null)
            {
                DgExerciseCallbackLaunchedJsonConverter dgExerciseCallbackLaunchedJsonConverter = (DgExerciseCallbackLaunchedJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(dgEvent.DgExerciseCallbackLaunched.GetType()));
                dgExerciseCallbackLaunchedJsonConverter.WriteProperties(writer, dgEvent.DgExerciseCallbackLaunched, jsonSerializerOptions);
            }

            if (dgEvent.DgExerciseCustomerDataComplete != null)
            {
                DgExerciseCustomerDataCompleteJsonConverter dgExerciseCustomerDataCompleteJsonConverter = (DgExerciseCustomerDataCompleteJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(dgEvent.DgExerciseCustomerDataComplete.GetType()));
                dgExerciseCustomerDataCompleteJsonConverter.WriteProperties(writer, dgEvent.DgExerciseCustomerDataComplete, jsonSerializerOptions);
            }

            if (dgEvent.DgExercisePortalComplete != null)
            {
                DgExercisePortalCompleteJsonConverter dgExercisePortalCompleteJsonConverter = (DgExercisePortalCompleteJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(dgEvent.DgExercisePortalComplete.GetType()));
                dgExercisePortalCompleteJsonConverter.WriteProperties(writer, dgEvent.DgExercisePortalComplete, jsonSerializerOptions);
            }

            if (dgEvent.DgExerciseVerificationComplete != null)
            {
                DgExerciseVerificationCompleteJsonConverter dgExerciseVerificationCompleteJsonConverter = (DgExerciseVerificationCompleteJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(dgEvent.DgExerciseVerificationComplete.GetType()));
                dgExerciseVerificationCompleteJsonConverter.WriteProperties(writer, dgEvent.DgExerciseVerificationComplete, jsonSerializerOptions);
            }

            if (dgEvent.DgOfferSelected != null)
            {
                DgOfferSelectedJsonConverter dgOfferSelectedJsonConverter = (DgOfferSelectedJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(dgEvent.DgOfferSelected.GetType()));
                dgOfferSelectedJsonConverter.WriteProperties(writer, dgEvent.DgOfferSelected, jsonSerializerOptions);
            }

            if (dgEvent.DgOffersBannerDisplay != null)
            {
                DgOffersBannerDisplayJsonConverter dgOffersBannerDisplayJsonConverter = (DgOffersBannerDisplayJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(dgEvent.DgOffersBannerDisplay.GetType()));
                dgOffersBannerDisplayJsonConverter.WriteProperties(writer, dgEvent.DgOffersBannerDisplay, jsonSerializerOptions);
            }

            if (dgEvent.DgOffersBannerLoaded != null)
            {
                DgOffersBannerLoadedJsonConverter dgOffersBannerLoadedJsonConverter = (DgOffersBannerLoadedJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(dgEvent.DgOffersBannerLoaded.GetType()));
                dgOffersBannerLoadedJsonConverter.WriteProperties(writer, dgEvent.DgOffersBannerLoaded, jsonSerializerOptions);
            }

            if (dgEvent.DgOffersMoreInfoClicked != null)
            {
                DgOffersMoreInfoClickedJsonConverter dgOffersMoreInfoClickedJsonConverter = (DgOffersMoreInfoClickedJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(dgEvent.DgOffersMoreInfoClicked.GetType()));
                dgOffersMoreInfoClickedJsonConverter.WriteProperties(writer, dgEvent.DgOffersMoreInfoClicked, jsonSerializerOptions);
            }

            WriteProperties(writer, dgEvent, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="DgEvent" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="dgEvent"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, DgEvent dgEvent, JsonSerializerOptions jsonSerializerOptions)
        {

        }
    }
}
