/*
 * Airline API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Com.Hopper.Hts.Airlines.Client.OpenAPIDateConverter;

namespace Com.Hopper.Hts.Airlines.Model
{
    /// <summary>
    /// A create DG offers request
    /// </summary>
    [DataContract(Name = "create_dg_offers_request")]
    public partial class CreateDgOffersRequest
    {

        /// <summary>
        /// Gets or Sets RequestType
        /// </summary>
        [DataMember(Name = "request_type", IsRequired = true, EmitDefaultValue = true)]
        public DgRequestType RequestType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateDgOffersRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateDgOffersRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateDgOffersRequest" /> class.
        /// </summary>
        /// <param name="itinerary">An object detailing the itinerary and fare used to create a DG offer (required).</param>
        /// <param name="requestType">requestType (required).</param>
        /// <param name="bookingDateTime">A UTC RFC3339 datetime; the date and time at which the booking was made. To be used only with the request type \&quot;post_booking\&quot;.</param>
        /// <param name="session">session.</param>
        /// <param name="extAttributes">extAttributes (required).</param>
        public CreateDgOffersRequest(List<DgItinerary> itinerary = default(List<DgItinerary>), DgRequestType requestType = default(DgRequestType), DateTime bookingDateTime = default(DateTime), CreateAirlineDgSessionRequest session = default(CreateAirlineDgSessionRequest), Dictionary<string, string> extAttributes = default(Dictionary<string, string>))
        {
            // to ensure "itinerary" is required (not null)
            if (itinerary == null)
            {
                throw new ArgumentNullException("itinerary is a required property for CreateDgOffersRequest and cannot be null");
            }
            this.Itinerary = itinerary;
            this.RequestType = requestType;
            // to ensure "extAttributes" is required (not null)
            if (extAttributes == null)
            {
                throw new ArgumentNullException("extAttributes is a required property for CreateDgOffersRequest and cannot be null");
            }
            this.ExtAttributes = extAttributes;
            this.BookingDateTime = bookingDateTime;
            this.Session = session;
        }

        /// <summary>
        /// An object detailing the itinerary and fare used to create a DG offer
        /// </summary>
        /// <value>An object detailing the itinerary and fare used to create a DG offer</value>
        [DataMember(Name = "itinerary", IsRequired = true, EmitDefaultValue = true)]
        public List<DgItinerary> Itinerary { get; set; }

        /// <summary>
        /// A UTC RFC3339 datetime; the date and time at which the booking was made. To be used only with the request type \&quot;post_booking\&quot;
        /// </summary>
        /// <value>A UTC RFC3339 datetime; the date and time at which the booking was made. To be used only with the request type \&quot;post_booking\&quot;</value>
        /*
        <example>2022-01-01T18:30Z</example>
        */
        [DataMember(Name = "booking_date_time", EmitDefaultValue = true)]
        public DateTime BookingDateTime { get; set; }

        /// <summary>
        /// Gets or Sets Session
        /// </summary>
        [DataMember(Name = "session", EmitDefaultValue = true)]
        public CreateAirlineDgSessionRequest Session { get; set; }

        /// <summary>
        /// Gets or Sets ExtAttributes
        /// </summary>
        [DataMember(Name = "ext_attributes", IsRequired = true, EmitDefaultValue = true)]
        public Dictionary<string, string> ExtAttributes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateDgOffersRequest {\n");
            sb.Append("  Itinerary: ").Append(Itinerary).Append("\n");
            sb.Append("  RequestType: ").Append(RequestType).Append("\n");
            sb.Append("  BookingDateTime: ").Append(BookingDateTime).Append("\n");
            sb.Append("  Session: ").Append(Session).Append("\n");
            sb.Append("  ExtAttributes: ").Append(ExtAttributes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
