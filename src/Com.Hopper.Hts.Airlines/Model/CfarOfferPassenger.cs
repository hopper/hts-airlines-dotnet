/*
 * Airline API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Com.Hopper.Hts.Airlines.Client.OpenAPIDateConverter;

namespace Com.Hopper.Hts.Airlines.Model
{
    /// <summary>
    /// An object detailing the Passenger Information as part of offers creation
    /// </summary>
    [DataContract(Name = "cfar_offer_passenger")]
    public partial class CfarOfferPassenger
    {

        /// <summary>
        /// Gets or Sets PassengerType
        /// </summary>
        [DataMember(Name = "passenger_type", IsRequired = true, EmitDefaultValue = true)]
        public PassengerType PassengerType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CfarOfferPassenger" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CfarOfferPassenger() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CfarOfferPassenger" /> class.
        /// </summary>
        /// <param name="passengerReference">Unique reference of the passenger (required).</param>
        /// <param name="passengerType">passengerType (required).</param>
        public CfarOfferPassenger(string passengerReference = default(string), PassengerType passengerType = default(PassengerType))
        {
            // to ensure "passengerReference" is required (not null)
            if (passengerReference == null)
            {
                throw new ArgumentNullException("passengerReference is a required property for CfarOfferPassenger and cannot be null");
            }
            this.PassengerReference = passengerReference;
            this.PassengerType = passengerType;
        }

        /// <summary>
        /// Unique reference of the passenger
        /// </summary>
        /// <value>Unique reference of the passenger</value>
        /*
        <example>1</example>
        */
        [DataMember(Name = "passenger_reference", IsRequired = true, EmitDefaultValue = true)]
        public string PassengerReference { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CfarOfferPassenger {\n");
            sb.Append("  PassengerReference: ").Append(PassengerReference).Append("\n");
            sb.Append("  PassengerType: ").Append(PassengerType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
