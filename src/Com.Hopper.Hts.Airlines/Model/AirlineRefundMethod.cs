// <auto-generated>
/*
 * Airline API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using Com.Hopper.Hts.Airlines.Client;

namespace Com.Hopper.Hts.Airlines.Model
{
    /// <summary>
    /// Defines airline_refund_method
    /// </summary>
    public enum AirlineRefundMethod
    {
        /// <summary>
        /// Enum Ftc for value: ftc
        /// </summary>
        Ftc = 1,

        /// <summary>
        /// Enum Cash for value: cash
        /// </summary>
        Cash = 2
    }

    /// <summary>
    /// Converts <see cref="AirlineRefundMethod"/> to and from the JSON value
    /// </summary>
    public static class AirlineRefundMethodValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="AirlineRefundMethod"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static AirlineRefundMethod FromString(string value)
        {
            if (value.Equals("ftc"))
                return AirlineRefundMethod.Ftc;

            if (value.Equals("cash"))
                return AirlineRefundMethod.Cash;

            throw new NotImplementedException($"Could not convert value to type AirlineRefundMethod: '{value}'");
        }

        /// <summary>
        /// Parses a given value to <see cref="AirlineRefundMethod"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static AirlineRefundMethod? FromStringOrDefault(string value)
        {
            if (value.Equals("ftc"))
                return AirlineRefundMethod.Ftc;

            if (value.Equals("cash"))
                return AirlineRefundMethod.Cash;

            return null;
        }

        /// <summary>
        /// Converts the <see cref="AirlineRefundMethod"/> to the json value
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static string ToJsonValue(AirlineRefundMethod value)
        {
            if (value == AirlineRefundMethod.Ftc)
                return "ftc";

            if (value == AirlineRefundMethod.Cash)
                return "cash";

            throw new NotImplementedException($"Value could not be handled: '{value}'");
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="AirlineRefundMethod"/>
    /// </summary>
    /// <exception cref="NotImplementedException"></exception>
    public class AirlineRefundMethodJsonConverter : JsonConverter<AirlineRefundMethod>
    {
        /// <summary>
        /// Returns a  from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override AirlineRefundMethod Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            AirlineRefundMethod? result = rawValue == null
                ? null
                : AirlineRefundMethodValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the AirlineRefundMethod to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="airlineRefundMethod"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, AirlineRefundMethod airlineRefundMethod, JsonSerializerOptions options)
        {
            writer.WriteStringValue(airlineRefundMethod.ToString());
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="AirlineRefundMethod"/>
    /// </summary>
    public class AirlineRefundMethodNullableJsonConverter : JsonConverter<AirlineRefundMethod?>
    {
        /// <summary>
        /// Returns a AirlineRefundMethod from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override AirlineRefundMethod? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            AirlineRefundMethod? result = rawValue == null
                ? null
                : AirlineRefundMethodValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the DateTime to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="airlineRefundMethod"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, AirlineRefundMethod? airlineRefundMethod, JsonSerializerOptions options)
        {
            writer.WriteStringValue(airlineRefundMethod?.ToString() ?? "null");
        }
    }
}
