// <auto-generated>
/*
 * Airline API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using Com.Hopper.Hts.Airlines.Client;

namespace Com.Hopper.Hts.Airlines.Model
{
    /// <summary>
    /// A create DG contract exercise request
    /// </summary>
    public partial class CreateDgContractExerciseRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateDgContractExerciseRequest" /> class.
        /// </summary>
        /// <param name="contractId">A unique identifier for a DG contract</param>
        /// <param name="itinerary">itinerary</param>
        /// <param name="pnrReference">Reference of the PNR in the airline system. In case of a PNR created subsequently to a split, fill requesting PNR / parent PNR (e.g. DEF456/ABC123) </param>
        /// <param name="emailAddress">Email address of the user</param>
        /// <param name="callbackUrl">URL on which the customer should be redirected after the exercise (if applicable)</param>
        /// <param name="redirectbackUrl">URL on which the customer should be redirected if the exercise is aborted (if applicable)</param>
        /// <param name="session">session</param>
        [JsonConstructor]
        public CreateDgContractExerciseRequest(string contractId, DgExerciseItinerary itinerary, string pnrReference, Option<string?> emailAddress = default, Option<string?> callbackUrl = default, Option<string?> redirectbackUrl = default, Option<CreateAirlineDgSessionRequest?> session = default)
        {
            ContractId = contractId;
            Itinerary = itinerary;
            PnrReference = pnrReference;
            EmailAddressOption = emailAddress;
            CallbackUrlOption = callbackUrl;
            RedirectbackUrlOption = redirectbackUrl;
            SessionOption = session;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// A unique identifier for a DG contract
        /// </summary>
        /// <value>A unique identifier for a DG contract</value>
        /* <example>1ec9ef29-be31-6ed3-beec-9f5ae0d164ee</example> */
        [JsonPropertyName("contract_id")]
        public string ContractId { get; set; }

        /// <summary>
        /// Gets or Sets Itinerary
        /// </summary>
        [JsonPropertyName("itinerary")]
        public DgExerciseItinerary Itinerary { get; set; }

        /// <summary>
        /// Reference of the PNR in the airline system. In case of a PNR created subsequently to a split, fill requesting PNR / parent PNR (e.g. DEF456/ABC123) 
        /// </summary>
        /// <value>Reference of the PNR in the airline system. In case of a PNR created subsequently to a split, fill requesting PNR / parent PNR (e.g. DEF456/ABC123) </value>
        /* <example>ABC123</example> */
        [JsonPropertyName("pnr_reference")]
        public string PnrReference { get; set; }

        /// <summary>
        /// Used to track the state of EmailAddress
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> EmailAddressOption { get; private set; }

        /// <summary>
        /// Email address of the user
        /// </summary>
        /// <value>Email address of the user</value>
        /* <example>john@doe.com</example> */
        [JsonPropertyName("email_address")]
        public string? EmailAddress { get { return this.EmailAddressOption; } set { this.EmailAddressOption = new Option<string?>(value); } }

        /// <summary>
        /// Used to track the state of CallbackUrl
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> CallbackUrlOption { get; private set; }

        /// <summary>
        /// URL on which the customer should be redirected after the exercise (if applicable)
        /// </summary>
        /// <value>URL on which the customer should be redirected after the exercise (if applicable)</value>
        /* <example>https://hts.hopper.com/</example> */
        [JsonPropertyName("callback_url")]
        public string? CallbackUrl { get { return this.CallbackUrlOption; } set { this.CallbackUrlOption = new Option<string?>(value); } }

        /// <summary>
        /// Used to track the state of RedirectbackUrl
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> RedirectbackUrlOption { get; private set; }

        /// <summary>
        /// URL on which the customer should be redirected if the exercise is aborted (if applicable)
        /// </summary>
        /// <value>URL on which the customer should be redirected if the exercise is aborted (if applicable)</value>
        /* <example>https://hts.hopper.com/</example> */
        [JsonPropertyName("redirectback_url")]
        public string? RedirectbackUrl { get { return this.RedirectbackUrlOption; } set { this.RedirectbackUrlOption = new Option<string?>(value); } }

        /// <summary>
        /// Used to track the state of Session
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<CreateAirlineDgSessionRequest?> SessionOption { get; private set; }

        /// <summary>
        /// Gets or Sets Session
        /// </summary>
        [JsonPropertyName("session")]
        public CreateAirlineDgSessionRequest? Session { get { return this.SessionOption; } set { this.SessionOption = new Option<CreateAirlineDgSessionRequest?>(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateDgContractExerciseRequest {\n");
            sb.Append("  ContractId: ").Append(ContractId).Append("\n");
            sb.Append("  Itinerary: ").Append(Itinerary).Append("\n");
            sb.Append("  PnrReference: ").Append(PnrReference).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  CallbackUrl: ").Append(CallbackUrl).Append("\n");
            sb.Append("  RedirectbackUrl: ").Append(RedirectbackUrl).Append("\n");
            sb.Append("  Session: ").Append(Session).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="CreateDgContractExerciseRequest" />
    /// </summary>
    public class CreateDgContractExerciseRequestJsonConverter : JsonConverter<CreateDgContractExerciseRequest>
    {
        /// <summary>
        /// Deserializes json to <see cref="CreateDgContractExerciseRequest" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override CreateDgContractExerciseRequest Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> contractId = default;
            Option<DgExerciseItinerary?> itinerary = default;
            Option<string?> pnrReference = default;
            Option<string?> emailAddress = default;
            Option<string?> callbackUrl = default;
            Option<string?> redirectbackUrl = default;
            Option<CreateAirlineDgSessionRequest?> session = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "contract_id":
                            contractId = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "itinerary":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                itinerary = new Option<DgExerciseItinerary?>(JsonSerializer.Deserialize<DgExerciseItinerary>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "pnr_reference":
                            pnrReference = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "email_address":
                            emailAddress = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "callback_url":
                            callbackUrl = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "redirectback_url":
                            redirectbackUrl = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "session":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                session = new Option<CreateAirlineDgSessionRequest?>(JsonSerializer.Deserialize<CreateAirlineDgSessionRequest>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!contractId.IsSet)
                throw new ArgumentException("Property is required for class CreateDgContractExerciseRequest.", nameof(contractId));

            if (!itinerary.IsSet)
                throw new ArgumentException("Property is required for class CreateDgContractExerciseRequest.", nameof(itinerary));

            if (!pnrReference.IsSet)
                throw new ArgumentException("Property is required for class CreateDgContractExerciseRequest.", nameof(pnrReference));

            if (contractId.IsSet && contractId.Value == null)
                throw new ArgumentNullException(nameof(contractId), "Property is not nullable for class CreateDgContractExerciseRequest.");

            if (itinerary.IsSet && itinerary.Value == null)
                throw new ArgumentNullException(nameof(itinerary), "Property is not nullable for class CreateDgContractExerciseRequest.");

            if (pnrReference.IsSet && pnrReference.Value == null)
                throw new ArgumentNullException(nameof(pnrReference), "Property is not nullable for class CreateDgContractExerciseRequest.");

            if (emailAddress.IsSet && emailAddress.Value == null)
                throw new ArgumentNullException(nameof(emailAddress), "Property is not nullable for class CreateDgContractExerciseRequest.");

            if (callbackUrl.IsSet && callbackUrl.Value == null)
                throw new ArgumentNullException(nameof(callbackUrl), "Property is not nullable for class CreateDgContractExerciseRequest.");

            if (redirectbackUrl.IsSet && redirectbackUrl.Value == null)
                throw new ArgumentNullException(nameof(redirectbackUrl), "Property is not nullable for class CreateDgContractExerciseRequest.");

            if (session.IsSet && session.Value == null)
                throw new ArgumentNullException(nameof(session), "Property is not nullable for class CreateDgContractExerciseRequest.");

            return new CreateDgContractExerciseRequest(contractId.Value!, itinerary.Value!, pnrReference.Value!, emailAddress, callbackUrl, redirectbackUrl, session);
        }

        /// <summary>
        /// Serializes a <see cref="CreateDgContractExerciseRequest" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="createDgContractExerciseRequest"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, CreateDgContractExerciseRequest createDgContractExerciseRequest, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, createDgContractExerciseRequest, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="CreateDgContractExerciseRequest" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="createDgContractExerciseRequest"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, CreateDgContractExerciseRequest createDgContractExerciseRequest, JsonSerializerOptions jsonSerializerOptions)
        {
            if (createDgContractExerciseRequest.ContractId == null)
                throw new ArgumentNullException(nameof(createDgContractExerciseRequest.ContractId), "Property is required for class CreateDgContractExerciseRequest.");

            if (createDgContractExerciseRequest.Itinerary == null)
                throw new ArgumentNullException(nameof(createDgContractExerciseRequest.Itinerary), "Property is required for class CreateDgContractExerciseRequest.");

            if (createDgContractExerciseRequest.PnrReference == null)
                throw new ArgumentNullException(nameof(createDgContractExerciseRequest.PnrReference), "Property is required for class CreateDgContractExerciseRequest.");

            if (createDgContractExerciseRequest.EmailAddressOption.IsSet && createDgContractExerciseRequest.EmailAddress == null)
                throw new ArgumentNullException(nameof(createDgContractExerciseRequest.EmailAddress), "Property is required for class CreateDgContractExerciseRequest.");

            if (createDgContractExerciseRequest.CallbackUrlOption.IsSet && createDgContractExerciseRequest.CallbackUrl == null)
                throw new ArgumentNullException(nameof(createDgContractExerciseRequest.CallbackUrl), "Property is required for class CreateDgContractExerciseRequest.");

            if (createDgContractExerciseRequest.RedirectbackUrlOption.IsSet && createDgContractExerciseRequest.RedirectbackUrl == null)
                throw new ArgumentNullException(nameof(createDgContractExerciseRequest.RedirectbackUrl), "Property is required for class CreateDgContractExerciseRequest.");

            if (createDgContractExerciseRequest.SessionOption.IsSet && createDgContractExerciseRequest.Session == null)
                throw new ArgumentNullException(nameof(createDgContractExerciseRequest.Session), "Property is required for class CreateDgContractExerciseRequest.");

            writer.WriteString("contract_id", createDgContractExerciseRequest.ContractId);

            writer.WritePropertyName("itinerary");
            JsonSerializer.Serialize(writer, createDgContractExerciseRequest.Itinerary, jsonSerializerOptions);
            writer.WriteString("pnr_reference", createDgContractExerciseRequest.PnrReference);

            if (createDgContractExerciseRequest.EmailAddressOption.IsSet)
                writer.WriteString("email_address", createDgContractExerciseRequest.EmailAddress);

            if (createDgContractExerciseRequest.CallbackUrlOption.IsSet)
                writer.WriteString("callback_url", createDgContractExerciseRequest.CallbackUrl);

            if (createDgContractExerciseRequest.RedirectbackUrlOption.IsSet)
                writer.WriteString("redirectback_url", createDgContractExerciseRequest.RedirectbackUrl);

            if (createDgContractExerciseRequest.SessionOption.IsSet)
            {
                writer.WritePropertyName("session");
                JsonSerializer.Serialize(writer, createDgContractExerciseRequest.Session, jsonSerializerOptions);
            }
        }
    }
}
