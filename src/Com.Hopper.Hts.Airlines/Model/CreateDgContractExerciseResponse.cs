// <auto-generated>
/*
 * Airline API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using Com.Hopper.Hts.Airlines.Client;

namespace Com.Hopper.Hts.Airlines.Model
{
    /// <summary>
    /// An object containing exercise information for a contract
    /// </summary>
    public partial class CreateDgContractExerciseResponse
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateDgContractExerciseResponse" /> class.
        /// </summary>
        /// <param name="id">Unique identifier for a DG exercise</param>
        /// <param name="redirectionUrl">URL on which the customer should be redirected to exercise (if applicable)</param>
        [JsonConstructor]
        public CreateDgContractExerciseResponse(string id, Option<string?> redirectionUrl = default)
        {
            Id = id;
            RedirectionUrlOption = redirectionUrl;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Unique identifier for a DG exercise
        /// </summary>
        /// <value>Unique identifier for a DG exercise</value>
        /* <example>1ec9ef4b-b3bf-64ae-8a3d-6b084d9f6b3c</example> */
        [JsonPropertyName("id")]
        public string Id { get; set; }

        /// <summary>
        /// Used to track the state of RedirectionUrl
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> RedirectionUrlOption { get; private set; }

        /// <summary>
        /// URL on which the customer should be redirected to exercise (if applicable)
        /// </summary>
        /// <value>URL on which the customer should be redirected to exercise (if applicable)</value>
        /* <example>https://hts.hopper.com/</example> */
        [JsonPropertyName("redirection_url")]
        public string? RedirectionUrl { get { return this.RedirectionUrlOption; } set { this.RedirectionUrlOption = new Option<string?>(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateDgContractExerciseResponse {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  RedirectionUrl: ").Append(RedirectionUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="CreateDgContractExerciseResponse" />
    /// </summary>
    public class CreateDgContractExerciseResponseJsonConverter : JsonConverter<CreateDgContractExerciseResponse>
    {
        /// <summary>
        /// Deserializes json to <see cref="CreateDgContractExerciseResponse" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override CreateDgContractExerciseResponse Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> id = default;
            Option<string?> redirectionUrl = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "id":
                            id = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "redirection_url":
                            redirectionUrl = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!id.IsSet)
                throw new ArgumentException("Property is required for class CreateDgContractExerciseResponse.", nameof(id));

            if (id.IsSet && id.Value == null)
                throw new ArgumentNullException(nameof(id), "Property is not nullable for class CreateDgContractExerciseResponse.");

            if (redirectionUrl.IsSet && redirectionUrl.Value == null)
                throw new ArgumentNullException(nameof(redirectionUrl), "Property is not nullable for class CreateDgContractExerciseResponse.");

            return new CreateDgContractExerciseResponse(id.Value!, redirectionUrl);
        }

        /// <summary>
        /// Serializes a <see cref="CreateDgContractExerciseResponse" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="createDgContractExerciseResponse"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, CreateDgContractExerciseResponse createDgContractExerciseResponse, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, createDgContractExerciseResponse, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="CreateDgContractExerciseResponse" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="createDgContractExerciseResponse"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, CreateDgContractExerciseResponse createDgContractExerciseResponse, JsonSerializerOptions jsonSerializerOptions)
        {
            if (createDgContractExerciseResponse.Id == null)
                throw new ArgumentNullException(nameof(createDgContractExerciseResponse.Id), "Property is required for class CreateDgContractExerciseResponse.");

            if (createDgContractExerciseResponse.RedirectionUrlOption.IsSet && createDgContractExerciseResponse.RedirectionUrl == null)
                throw new ArgumentNullException(nameof(createDgContractExerciseResponse.RedirectionUrl), "Property is required for class CreateDgContractExerciseResponse.");

            writer.WriteString("id", createDgContractExerciseResponse.Id);

            if (createDgContractExerciseResponse.RedirectionUrlOption.IsSet)
                writer.WriteString("redirection_url", createDgContractExerciseResponse.RedirectionUrl);
        }
    }
}
