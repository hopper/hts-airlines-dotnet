// <auto-generated>
/*
 * Airline API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using Com.Hopper.Hts.Airlines.Client;

namespace Com.Hopper.Hts.Airlines.Model
{
    /// <summary>
    /// CfarEvent
    /// </summary>
    public partial class CfarEvent
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="bookingConfirmed1"></param>
        public CfarEvent(BookingConfirmed1 bookingConfirmed1)
        {
            BookingConfirmed1 = bookingConfirmed1;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarDenyPurchase"></param>
        public CfarEvent(CfarDenyPurchase cfarDenyPurchase)
        {
            CfarDenyPurchase = cfarDenyPurchase;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarEventWithContract"></param>
        public CfarEvent(CfarEventWithContract cfarEventWithContract)
        {
            CfarEventWithContract = cfarEventWithContract;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarExerciseCallbackLaunched"></param>
        public CfarEvent(CfarExerciseCallbackLaunched cfarExerciseCallbackLaunched)
        {
            CfarExerciseCallbackLaunched = cfarExerciseCallbackLaunched;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarExerciseCustomerDataComplete"></param>
        public CfarEvent(CfarExerciseCustomerDataComplete cfarExerciseCustomerDataComplete)
        {
            CfarExerciseCustomerDataComplete = cfarExerciseCustomerDataComplete;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarExercisePortalComplete"></param>
        public CfarEvent(CfarExercisePortalComplete cfarExercisePortalComplete)
        {
            CfarExercisePortalComplete = cfarExercisePortalComplete;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarExercisePortalDisplay"></param>
        public CfarEvent(CfarExercisePortalDisplay cfarExercisePortalDisplay)
        {
            CfarExercisePortalDisplay = cfarExercisePortalDisplay;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarExerciseVerificationComplete"></param>
        public CfarEvent(CfarExerciseVerificationComplete cfarExerciseVerificationComplete)
        {
            CfarExerciseVerificationComplete = cfarExerciseVerificationComplete;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarExerciseVerificationSent"></param>
        public CfarEvent(CfarExerciseVerificationSent cfarExerciseVerificationSent)
        {
            CfarExerciseVerificationSent = cfarExerciseVerificationSent;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarForcedChoiceWarning"></param>
        public CfarEvent(CfarForcedChoiceWarning cfarForcedChoiceWarning)
        {
            CfarForcedChoiceWarning = cfarForcedChoiceWarning;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarOfferSelected"></param>
        public CfarEvent(CfarOfferSelected cfarOfferSelected)
        {
            CfarOfferSelected = cfarOfferSelected;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarOffersBannerDisplay"></param>
        public CfarEvent(CfarOffersBannerDisplay cfarOffersBannerDisplay)
        {
            CfarOffersBannerDisplay = cfarOffersBannerDisplay;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarOffersBannerLoaded"></param>
        public CfarEvent(CfarOffersBannerLoaded cfarOffersBannerLoaded)
        {
            CfarOffersBannerLoaded = cfarOffersBannerLoaded;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarOffersMoreInfoClicked"></param>
        public CfarEvent(CfarOffersMoreInfoClicked cfarOffersMoreInfoClicked)
        {
            CfarOffersMoreInfoClicked = cfarOffersMoreInfoClicked;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarOffersTakeoverDisplay"></param>
        public CfarEvent(CfarOffersTakeoverDisplay cfarOffersTakeoverDisplay)
        {
            CfarOffersTakeoverDisplay = cfarOffersTakeoverDisplay;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="cfarViewInfo"></param>
        public CfarEvent(CfarViewInfo cfarViewInfo)
        {
            CfarViewInfo = cfarViewInfo;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CfarEvent" /> class.
        /// </summary>
        /// <param name="offersDisplayed1"></param>
        public CfarEvent(OffersDisplayed1 offersDisplayed1)
        {
            OffersDisplayed1 = offersDisplayed1;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Gets or Sets BookingConfirmed1
        /// </summary>
        public BookingConfirmed1? BookingConfirmed1 { get; set; }

        /// <summary>
        /// Gets or Sets CfarDenyPurchase
        /// </summary>
        public CfarDenyPurchase? CfarDenyPurchase { get; set; }

        /// <summary>
        /// Gets or Sets CfarEventWithContract
        /// </summary>
        public CfarEventWithContract? CfarEventWithContract { get; set; }

        /// <summary>
        /// Gets or Sets CfarExerciseCallbackLaunched
        /// </summary>
        public CfarExerciseCallbackLaunched? CfarExerciseCallbackLaunched { get; set; }

        /// <summary>
        /// Gets or Sets CfarExerciseCustomerDataComplete
        /// </summary>
        public CfarExerciseCustomerDataComplete? CfarExerciseCustomerDataComplete { get; set; }

        /// <summary>
        /// Gets or Sets CfarExercisePortalComplete
        /// </summary>
        public CfarExercisePortalComplete? CfarExercisePortalComplete { get; set; }

        /// <summary>
        /// Gets or Sets CfarExercisePortalDisplay
        /// </summary>
        public CfarExercisePortalDisplay? CfarExercisePortalDisplay { get; set; }

        /// <summary>
        /// Gets or Sets CfarExerciseVerificationComplete
        /// </summary>
        public CfarExerciseVerificationComplete? CfarExerciseVerificationComplete { get; set; }

        /// <summary>
        /// Gets or Sets CfarExerciseVerificationSent
        /// </summary>
        public CfarExerciseVerificationSent? CfarExerciseVerificationSent { get; set; }

        /// <summary>
        /// Gets or Sets CfarForcedChoiceWarning
        /// </summary>
        public CfarForcedChoiceWarning? CfarForcedChoiceWarning { get; set; }

        /// <summary>
        /// Gets or Sets CfarOfferSelected
        /// </summary>
        public CfarOfferSelected? CfarOfferSelected { get; set; }

        /// <summary>
        /// Gets or Sets CfarOffersBannerDisplay
        /// </summary>
        public CfarOffersBannerDisplay? CfarOffersBannerDisplay { get; set; }

        /// <summary>
        /// Gets or Sets CfarOffersBannerLoaded
        /// </summary>
        public CfarOffersBannerLoaded? CfarOffersBannerLoaded { get; set; }

        /// <summary>
        /// Gets or Sets CfarOffersMoreInfoClicked
        /// </summary>
        public CfarOffersMoreInfoClicked? CfarOffersMoreInfoClicked { get; set; }

        /// <summary>
        /// Gets or Sets CfarOffersTakeoverDisplay
        /// </summary>
        public CfarOffersTakeoverDisplay? CfarOffersTakeoverDisplay { get; set; }

        /// <summary>
        /// Gets or Sets CfarViewInfo
        /// </summary>
        public CfarViewInfo? CfarViewInfo { get; set; }

        /// <summary>
        /// Gets or Sets OffersDisplayed1
        /// </summary>
        public OffersDisplayed1? OffersDisplayed1 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CfarEvent {\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="CfarEvent" />
    /// </summary>
    public class CfarEventJsonConverter : JsonConverter<CfarEvent>
    {
        /// <summary>
        /// Deserializes json to <see cref="CfarEvent" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override CfarEvent Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> type = default;

            BookingConfirmed1? bookingConfirmed1 = null;
            CfarDenyPurchase? cfarDenyPurchase = null;
            CfarEventWithContract? cfarEventWithContract = null;
            CfarExerciseCallbackLaunched? cfarExerciseCallbackLaunched = null;
            CfarExerciseCustomerDataComplete? cfarExerciseCustomerDataComplete = null;
            CfarExercisePortalComplete? cfarExercisePortalComplete = null;
            CfarExercisePortalDisplay? cfarExercisePortalDisplay = null;
            CfarExerciseVerificationComplete? cfarExerciseVerificationComplete = null;
            CfarExerciseVerificationSent? cfarExerciseVerificationSent = null;
            CfarForcedChoiceWarning? cfarForcedChoiceWarning = null;
            CfarOfferSelected? cfarOfferSelected = null;
            CfarOffersBannerDisplay? cfarOffersBannerDisplay = null;
            CfarOffersBannerLoaded? cfarOffersBannerLoaded = null;
            CfarOffersMoreInfoClicked? cfarOffersMoreInfoClicked = null;
            CfarOffersTakeoverDisplay? cfarOffersTakeoverDisplay = null;
            CfarViewInfo? cfarViewInfo = null;
            OffersDisplayed1? offersDisplayed1 = null;
            // TODO: not sure why duplicated params are generated, need to delete them manually

            Utf8JsonReader utf8JsonReaderDiscriminator = utf8JsonReader;
            while (utf8JsonReaderDiscriminator.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReaderDiscriminator.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReaderDiscriminator.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReaderDiscriminator.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReaderDiscriminator.CurrentDepth)
                    break;

                if (utf8JsonReaderDiscriminator.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReaderDiscriminator.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReaderDiscriminator.GetString();
                    utf8JsonReaderDiscriminator.Read();
                    if (localVarJsonPropertyName?.Equals("type") ?? false)
                    {
                        string? discriminator = utf8JsonReaderDiscriminator.GetString();
                        if (discriminator?.Equals("booking_confirmed") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderBookingConfirmed1 = utf8JsonReader;
                            bookingConfirmed1 = JsonSerializer.Deserialize<BookingConfirmed1>(ref utf8JsonReaderBookingConfirmed1, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_deny_purchase") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarDenyPurchase = utf8JsonReader;
                            cfarDenyPurchase = JsonSerializer.Deserialize<CfarDenyPurchase>(ref utf8JsonReaderCfarDenyPurchase, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_event_with_contract") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarEventWithContract = utf8JsonReader;
                            cfarEventWithContract = JsonSerializer.Deserialize<CfarEventWithContract>(ref utf8JsonReaderCfarEventWithContract, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_exercise_callback_launched") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarExerciseCallbackLaunched = utf8JsonReader;
                            cfarExerciseCallbackLaunched = JsonSerializer.Deserialize<CfarExerciseCallbackLaunched>(ref utf8JsonReaderCfarExerciseCallbackLaunched, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_exercise_customer_data_complete") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarExerciseCustomerDataComplete = utf8JsonReader;
                            cfarExerciseCustomerDataComplete = JsonSerializer.Deserialize<CfarExerciseCustomerDataComplete>(ref utf8JsonReaderCfarExerciseCustomerDataComplete, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_exercise_portal_complete") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarExercisePortalComplete = utf8JsonReader;
                            cfarExercisePortalComplete = JsonSerializer.Deserialize<CfarExercisePortalComplete>(ref utf8JsonReaderCfarExercisePortalComplete, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_exercise_portal_display") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarExercisePortalDisplay = utf8JsonReader;
                            cfarExercisePortalDisplay = JsonSerializer.Deserialize<CfarExercisePortalDisplay>(ref utf8JsonReaderCfarExercisePortalDisplay, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_exercise_verification_complete") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarExerciseVerificationComplete = utf8JsonReader;
                            cfarExerciseVerificationComplete = JsonSerializer.Deserialize<CfarExerciseVerificationComplete>(ref utf8JsonReaderCfarExerciseVerificationComplete, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_exercise_verification_sent") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarExerciseVerificationSent = utf8JsonReader;
                            cfarExerciseVerificationSent = JsonSerializer.Deserialize<CfarExerciseVerificationSent>(ref utf8JsonReaderCfarExerciseVerificationSent, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_forced_choice_warning") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarForcedChoiceWarning = utf8JsonReader;
                            cfarForcedChoiceWarning = JsonSerializer.Deserialize<CfarForcedChoiceWarning>(ref utf8JsonReaderCfarForcedChoiceWarning, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_offer_selected") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarOfferSelected = utf8JsonReader;
                            cfarOfferSelected = JsonSerializer.Deserialize<CfarOfferSelected>(ref utf8JsonReaderCfarOfferSelected, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_offers_banner_display") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarOffersBannerDisplay = utf8JsonReader;
                            cfarOffersBannerDisplay = JsonSerializer.Deserialize<CfarOffersBannerDisplay>(ref utf8JsonReaderCfarOffersBannerDisplay, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_offers_banner_loaded") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarOffersBannerLoaded = utf8JsonReader;
                            cfarOffersBannerLoaded = JsonSerializer.Deserialize<CfarOffersBannerLoaded>(ref utf8JsonReaderCfarOffersBannerLoaded, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_offers_more_info_clicked") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarOffersMoreInfoClicked = utf8JsonReader;
                            cfarOffersMoreInfoClicked = JsonSerializer.Deserialize<CfarOffersMoreInfoClicked>(ref utf8JsonReaderCfarOffersMoreInfoClicked, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_offers_takeover_display") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarOffersTakeoverDisplay = utf8JsonReader;
                            cfarOffersTakeoverDisplay = JsonSerializer.Deserialize<CfarOffersTakeoverDisplay>(ref utf8JsonReaderCfarOffersTakeoverDisplay, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("cfar_view_info") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderCfarViewInfo = utf8JsonReader;
                            cfarViewInfo = JsonSerializer.Deserialize<CfarViewInfo>(ref utf8JsonReaderCfarViewInfo, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("offers_displayed") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderOffersDisplayed1 = utf8JsonReader;
                            offersDisplayed1 = JsonSerializer.Deserialize<OffersDisplayed1>(ref utf8JsonReaderOffersDisplayed1, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("booking_confirmed1") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderBookingConfirmed1 = utf8JsonReader;
                            bookingConfirmed1 = JsonSerializer.Deserialize<BookingConfirmed1>(ref utf8JsonReaderBookingConfirmed1, jsonSerializerOptions);
                        }
                        if (discriminator?.Equals("offers_displayed1") ?? false)
                        {
                            Utf8JsonReader utf8JsonReaderOffersDisplayed1 = utf8JsonReader;
                            offersDisplayed1 = JsonSerializer.Deserialize<OffersDisplayed1>(ref utf8JsonReaderOffersDisplayed1, jsonSerializerOptions);
                        }
                    }
                }
            }

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "type":
                            type = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!type.IsSet)
                throw new ArgumentException("Property is required for class CfarEvent.", nameof(type));

            if (type.IsSet && type.Value == null)
                throw new ArgumentNullException(nameof(type), "Property is not nullable for class CfarEvent.");

            if (bookingConfirmed1 != null)
                return new CfarEvent(bookingConfirmed1);

            if (cfarDenyPurchase != null)
                return new CfarEvent(cfarDenyPurchase);

            if (cfarEventWithContract != null)
                return new CfarEvent(cfarEventWithContract);

            if (cfarExerciseCallbackLaunched != null)
                return new CfarEvent(cfarExerciseCallbackLaunched);

            if (cfarExerciseCustomerDataComplete != null)
                return new CfarEvent(cfarExerciseCustomerDataComplete);

            if (cfarExercisePortalComplete != null)
                return new CfarEvent(cfarExercisePortalComplete);

            if (cfarExercisePortalDisplay != null)
                return new CfarEvent(cfarExercisePortalDisplay);

            if (cfarExerciseVerificationComplete != null)
                return new CfarEvent(cfarExerciseVerificationComplete);

            if (cfarExerciseVerificationSent != null)
                return new CfarEvent(cfarExerciseVerificationSent);

            if (cfarForcedChoiceWarning != null)
                return new CfarEvent(cfarForcedChoiceWarning);

            if (cfarOfferSelected != null)
                return new CfarEvent(cfarOfferSelected);

            if (cfarOffersBannerDisplay != null)
                return new CfarEvent(cfarOffersBannerDisplay);

            if (cfarOffersBannerLoaded != null)
                return new CfarEvent(cfarOffersBannerLoaded);

            if (cfarOffersMoreInfoClicked != null)
                return new CfarEvent(cfarOffersMoreInfoClicked);

            if (cfarOffersTakeoverDisplay != null)
                return new CfarEvent(cfarOffersTakeoverDisplay);

            if (cfarViewInfo != null)
                return new CfarEvent(cfarViewInfo);

            if (offersDisplayed1 != null)
                return new CfarEvent(offersDisplayed1);

            if (bookingConfirmed1 != null)
                return new CfarEvent(bookingConfirmed1);

            if (offersDisplayed1 != null)
                return new CfarEvent(offersDisplayed1);

            throw new JsonException();
        }

        /// <summary>
        /// Serializes a <see cref="CfarEvent" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="cfarEvent"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, CfarEvent cfarEvent, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            if (cfarEvent.BookingConfirmed1 != null)
            {
                BookingConfirmed1JsonConverter bookingConfirmed1JsonConverter = (BookingConfirmed1JsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.BookingConfirmed1.GetType()));
                bookingConfirmed1JsonConverter.WriteProperties(writer, cfarEvent.BookingConfirmed1, jsonSerializerOptions);
            }

            if (cfarEvent.CfarDenyPurchase != null)
            {
                CfarDenyPurchaseJsonConverter cfarDenyPurchaseJsonConverter = (CfarDenyPurchaseJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarDenyPurchase.GetType()));
                cfarDenyPurchaseJsonConverter.WriteProperties(writer, cfarEvent.CfarDenyPurchase, jsonSerializerOptions);
            }

            if (cfarEvent.CfarEventWithContract != null)
            {
                CfarEventWithContractJsonConverter cfarEventWithContractJsonConverter = (CfarEventWithContractJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarEventWithContract.GetType()));
                cfarEventWithContractJsonConverter.WriteProperties(writer, cfarEvent.CfarEventWithContract, jsonSerializerOptions);
            }

            if (cfarEvent.CfarExerciseCallbackLaunched != null)
            {
                CfarExerciseCallbackLaunchedJsonConverter cfarExerciseCallbackLaunchedJsonConverter = (CfarExerciseCallbackLaunchedJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarExerciseCallbackLaunched.GetType()));
                cfarExerciseCallbackLaunchedJsonConverter.WriteProperties(writer, cfarEvent.CfarExerciseCallbackLaunched, jsonSerializerOptions);
            }

            if (cfarEvent.CfarExerciseCustomerDataComplete != null)
            {
                CfarExerciseCustomerDataCompleteJsonConverter cfarExerciseCustomerDataCompleteJsonConverter = (CfarExerciseCustomerDataCompleteJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarExerciseCustomerDataComplete.GetType()));
                cfarExerciseCustomerDataCompleteJsonConverter.WriteProperties(writer, cfarEvent.CfarExerciseCustomerDataComplete, jsonSerializerOptions);
            }

            if (cfarEvent.CfarExercisePortalComplete != null)
            {
                CfarExercisePortalCompleteJsonConverter cfarExercisePortalCompleteJsonConverter = (CfarExercisePortalCompleteJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarExercisePortalComplete.GetType()));
                cfarExercisePortalCompleteJsonConverter.WriteProperties(writer, cfarEvent.CfarExercisePortalComplete, jsonSerializerOptions);
            }

            if (cfarEvent.CfarExercisePortalDisplay != null)
            {
                CfarExercisePortalDisplayJsonConverter cfarExercisePortalDisplayJsonConverter = (CfarExercisePortalDisplayJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarExercisePortalDisplay.GetType()));
                cfarExercisePortalDisplayJsonConverter.WriteProperties(writer, cfarEvent.CfarExercisePortalDisplay, jsonSerializerOptions);
            }

            if (cfarEvent.CfarExerciseVerificationComplete != null)
            {
                CfarExerciseVerificationCompleteJsonConverter cfarExerciseVerificationCompleteJsonConverter = (CfarExerciseVerificationCompleteJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarExerciseVerificationComplete.GetType()));
                cfarExerciseVerificationCompleteJsonConverter.WriteProperties(writer, cfarEvent.CfarExerciseVerificationComplete, jsonSerializerOptions);
            }

            if (cfarEvent.CfarExerciseVerificationSent != null)
            {
                CfarExerciseVerificationSentJsonConverter cfarExerciseVerificationSentJsonConverter = (CfarExerciseVerificationSentJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarExerciseVerificationSent.GetType()));
                cfarExerciseVerificationSentJsonConverter.WriteProperties(writer, cfarEvent.CfarExerciseVerificationSent, jsonSerializerOptions);
            }

            if (cfarEvent.CfarForcedChoiceWarning != null)
            {
                CfarForcedChoiceWarningJsonConverter cfarForcedChoiceWarningJsonConverter = (CfarForcedChoiceWarningJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarForcedChoiceWarning.GetType()));
                cfarForcedChoiceWarningJsonConverter.WriteProperties(writer, cfarEvent.CfarForcedChoiceWarning, jsonSerializerOptions);
            }

            if (cfarEvent.CfarOfferSelected != null)
            {
                CfarOfferSelectedJsonConverter cfarOfferSelectedJsonConverter = (CfarOfferSelectedJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarOfferSelected.GetType()));
                cfarOfferSelectedJsonConverter.WriteProperties(writer, cfarEvent.CfarOfferSelected, jsonSerializerOptions);
            }

            if (cfarEvent.CfarOffersBannerDisplay != null)
            {
                CfarOffersBannerDisplayJsonConverter cfarOffersBannerDisplayJsonConverter = (CfarOffersBannerDisplayJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarOffersBannerDisplay.GetType()));
                cfarOffersBannerDisplayJsonConverter.WriteProperties(writer, cfarEvent.CfarOffersBannerDisplay, jsonSerializerOptions);
            }

            if (cfarEvent.CfarOffersBannerLoaded != null)
            {
                CfarOffersBannerLoadedJsonConverter cfarOffersBannerLoadedJsonConverter = (CfarOffersBannerLoadedJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarOffersBannerLoaded.GetType()));
                cfarOffersBannerLoadedJsonConverter.WriteProperties(writer, cfarEvent.CfarOffersBannerLoaded, jsonSerializerOptions);
            }

            if (cfarEvent.CfarOffersMoreInfoClicked != null)
            {
                CfarOffersMoreInfoClickedJsonConverter cfarOffersMoreInfoClickedJsonConverter = (CfarOffersMoreInfoClickedJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarOffersMoreInfoClicked.GetType()));
                cfarOffersMoreInfoClickedJsonConverter.WriteProperties(writer, cfarEvent.CfarOffersMoreInfoClicked, jsonSerializerOptions);
            }

            if (cfarEvent.CfarOffersTakeoverDisplay != null)
            {
                CfarOffersTakeoverDisplayJsonConverter cfarOffersTakeoverDisplayJsonConverter = (CfarOffersTakeoverDisplayJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarOffersTakeoverDisplay.GetType()));
                cfarOffersTakeoverDisplayJsonConverter.WriteProperties(writer, cfarEvent.CfarOffersTakeoverDisplay, jsonSerializerOptions);
            }

            if (cfarEvent.CfarViewInfo != null)
            {
                CfarViewInfoJsonConverter cfarViewInfoJsonConverter = (CfarViewInfoJsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.CfarViewInfo.GetType()));
                cfarViewInfoJsonConverter.WriteProperties(writer, cfarEvent.CfarViewInfo, jsonSerializerOptions);
            }

            if (cfarEvent.OffersDisplayed1 != null)
            {
                OffersDisplayed1JsonConverter offersDisplayed1JsonConverter = (OffersDisplayed1JsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert(cfarEvent.OffersDisplayed1.GetType()));
                offersDisplayed1JsonConverter.WriteProperties(writer, cfarEvent.OffersDisplayed1, jsonSerializerOptions);
            }

            WriteProperties(writer, cfarEvent, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="CfarEvent" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="cfarEvent"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, CfarEvent cfarEvent, JsonSerializerOptions jsonSerializerOptions)
        {

        }
    }
}
